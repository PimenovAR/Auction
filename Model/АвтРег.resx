<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        WQAAAABJRU5ErkJggg==
</value>
  </data>
</root>